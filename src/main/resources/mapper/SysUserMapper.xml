<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ymk.health.mapper.SysUserMapper">

  <resultMap id="LoginUser" type="SysUser">
    <id column="id" property="id"/>
    <result column="username" property="username"/>
    <result column="password" property="password"/>
    <result column="nickname" property="nickname"/>
    <result column="sex" property="sex"/>
    <result column="avatar" property="avatar"/>
    <result column="address" property="address"/>
    <result column="wx_openid" property="wxOpenid"/>
    <result column="status" property="status"/>
    <result column="admin" property="admin"/>
    <result column="phone" property="phone"/>
    <result column="email" property="email"/>
    <result column="create_time" property="createTime"/>
    <result column="update_time" property="updateTime"/>
    <collection property="roles" ofType="SysRole" select="findRoles" column="id"/>
    <collection property="menus" ofType="SysMenu" select="findMenus" column="id"/>
    <collection property="permissions" ofType="Permission" select="findPermissions" column="id"/>
  </resultMap>

  <resultMap id="roleMap" type="SysRole">
    <id column="id" property="id"/>
    <result column="label" property="label"/>
    <result column="code" property="code"/>
  </resultMap>

  <resultMap id="menuMap" type="SysMenu">
    <id column="id" property="id"/>
    <result column="path" property="path"/>
    <result column="icon" property="icon"/>
    <result column="title" property="title"/>
    <result column="component" property="component"/>
    <result column="parent_id" property="parentId"/>
  </resultMap>

  <resultMap id="permissionMap" type="Permission">
    <id column="id" property="id"/>
    <result column="label" property="label"/>
    <result column="code" property="code"/>
  </resultMap>

  <insert id="insert" parameterType="com.ymk.health.vo.UserRolesVo">
    insert into sys_user(username, password, nickname, sex, avatar, address, wx_openid, status, admin, phone, email)
    VALUES (#{username}, #{password}, #{nickname}, #{sex}, #{avatar}, #{address}, #{wxOpenid}, #{status}, #{admin},
            #{phone}, #{email});
  </insert>

  <insert id="bindUserRoles">
    insert into user_roles
    values (#{userId}, #{roleId});
  </insert>

  <update id="update" parameterType="com.ymk.health.vo.UserRolesVo">
    update sys_user
    <set>
      <if test="username != null">
        `username` = #{username},
      </if>
      <if test="password != null">
        `password` = #{password},
      </if>
      <if test="nickname != null">
        `nickname` = #{nickname},
      </if>
      <if test="sex != null">
        `sex` = #{sex},
      </if>
      <if test="address != null">
        `address` = #{address},
      </if>
      <if test="wxOpenid != null">
        `wx_openid` = #{wxOpenid},
      </if>
      <if test="status != null">
        `status` = #{status},
      </if>
      <if test="admin != null">
        `admin` = #{admin},
      </if>
      <if test="phone != null">
        `phone` = #{phone},
      </if>
      <if test="email != null">
        `email` = #{email}
      </if>
    </set>
    where `id` = #{id};
  </update>

  <delete id="delete">
    delete
    from sys_user
    where id = #{id};
  </delete>

  <delete id="deleteUserRoles">
    delete
    from user_roles
    where `user_id` = #{userId}
  </delete>

  <select id="findAll" resultType="SysUser">
    select *
    from sys_user;
  </select>

  <select id="findUserByUsername" parameterType="String" resultMap="LoginUser">
    select *
    from sys_user
    where username = #{username};
  </select>

  <!--
  功能sql
   -->
  <!-- 根据用户id 查询角色信息 -->
  <select id="findRoles" parameterType="int" resultMap="roleMap">
    select *
    from sys_role
    <if test="userId != null">
      where id in (select role_id from user_roles where user_id = #{userId});
    </if>
  </select>
  <!--根据角色id 查询菜单信息(父级菜单)-->
  <select id="findMenus" parameterType="int" resultMap="menuMap">
    select *
    from sys_menu
    where parent_id is null or parent_id = 0
    <if test="userId != null">
      and id in (
      select menu_id
      from roles_menus
      where role_id in (select id from user_roles where user_id = #{userId}));
    </if>
  </select>
  <!--根据角色id 查询权限信息-->
  <select id="findPermissions" parameterType="int" resultMap="permissionMap">
    SELECT *
    FROM sys_permission
    <if test="userId != null">
      WHERE id IN (
      SELECT permission_id
      FROM roles_permissions
      WHERE role_id IN (SELECT id FROM user_roles WHERE user_id = #{userId}));
    </if>
  </select>
  <!--根据菜单id 查询子菜单-->
  <select id="findChildMenus" parameterType="Map" resultMap="menuMap">
    SELECT *
    FROM sys_menu
    WHERE parent_id = #{parentId}
    <if test="userId != null">
      AND id IN (
      SELECT menu_id
      FROM roles_menus
      WHERE role_id IN (SELECT role_id FROM user_roles WHERE user_id = #{userId}));
    </if>
  </select>

  <select id="findPage" resultType="SysUser">
    select * from sys_user
    <if test="queryString != null and queryString.length > 0">
      where username like concat('%', #{queryString}, '%')
      or nickname like concat('%', #{queryString}, '%')
      or address like concat('%', #{queryString}, '%')
      or phone like concat('%', #{queryString}, '%')
      or email like concat('%', #{queryString}, '%')
    </if>
  </select>

  <select id="findUserId" resultType="long">
    select id
    from sys_user
    where `username` = #{username};
  </select>

  <select id="findUserByPhone" resultType="SysUser">
    select *
    from sys_user
    where phone = #{phone};
  </select>

</mapper>
